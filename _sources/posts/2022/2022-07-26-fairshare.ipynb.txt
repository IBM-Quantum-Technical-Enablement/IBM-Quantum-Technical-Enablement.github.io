{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "df9da121",
   "metadata": {},
   "source": [
    "# Understanding fair-share scheduling\n",
    "\n",
    "```{post} 2022-07-26\n",
    ":category: Services\n",
    ":tags: services, hardware, admin\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8886bb97",
   "metadata": {},
   "source": [
    "Here we will introduce the reader to Fair-share Scheduling, the method by which most IBM Quantum systems are accessed.  We will go over the basics of Fair-share and understand its behavior via simulation."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a38d3117",
   "metadata": {},
   "source": [
    "## Frontmatter\n",
    "\n",
    "Here we import the tools we will need to make a threaded Fair-share scheduling simulation."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "af74c6a0",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:16:28.999310Z",
     "start_time": "2022-07-26T14:16:28.489295Z"
    }
   },
   "outputs": [],
   "source": [
    "import time\n",
    "import datetime\n",
    "import threading\n",
    "import numpy as np\n",
    "\n",
    "# For plotting\n",
    "import matplotlib.pyplot as plt\n",
    "plt.style.use('ibmq-dark')\n",
    "%config InlineBackend.figure_format='retina'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "72be2773",
   "metadata": {},
   "source": [
    "## Introduction to Fair-share\n",
    "\n",
    "Understanding how jobs are processed by IBM Quantum computers is one of the harder things for users to grasp.  These difficulties are due to the fact that the manner in which jobs are processed by the quantum processors (QPUs) is dynamic; there is no notion of a fixed order / queue.  This makes informing users as to when their jobs will execute challenging.  Add to this the fact that many types of jobs, e.g. iterative algorithms, do not have an a priori known execution time, and things get even harder to estimate.\n",
    "\n",
    "However, the fundamental building blocks of a fair-share scheduler are fairly easy to understand.  In fact, fair-share scheduling has been around for sometime, is a standard building-block of classical operating systems, and even has a Wiki page: [Fair-share_scheduling](https://en.wikipedia.org/wiki/Fair-share_scheduling).  Moreover, even though this system is complex in practice, we can actually simulate the dynamics, and understand the behavior in certain theoretical limits.\n",
    "\n",
    "Here we introduce the reader to the fair-share scheduler used by IBM Quantum and the assumptions and limitations that come into play.  In particular, we will simulate the behavior of this model in several situations to gain understanding of how it works in ideal settings."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7353002",
   "metadata": {},
   "source": [
    "## Scheduling assumptions\n",
    "\n",
    "The fair-share algorithm is predicated on the validity of several assumptions.  These are laid out in the following slide:"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "316a7751",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-25T22:17:13.605054Z",
     "start_time": "2022-07-25T22:17:13.582720Z"
    }
   },
   "source": [
    "<img src=\"fairshare_imgs/assumptions.png\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f1787591",
   "metadata": {},
   "source": [
    "So, in short, the hardware is assumed to be used all the time, we cannot make the duration of the jobs longer than some threshold value, and (of course) we should give access to the hardware in proportion to what \"share\" is purchased or allotted."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "88dfe80e",
   "metadata": {},
   "source": [
    "## Fair-share basics\n",
    "\n",
    "With the assumptions and operating conditions in hand, we can now get to the basics behind fair-share.  First, we need three ingredients: The fraction of system access given to each user, the floating time span over which we aim to balance the usage, and the maximum duration of a job.  \n",
    "\n",
    "To begin we focus on the simple situation where several users with different shares send jobs to a single QPU.  First, user is given some fraction of system as their access amount (if you have noticed I try to avoid saying anything about amounts of time a user gets and instead say \"access\".  This is intentional).  Next, we have to compute the amount of \"usage\" that each user has accumulated going back in time by an amount equal to the window time and adding up the time for all jobs in this duration.  For example, with a time window of 4 weeks/ 28 days ($168 * 4=672$ hours), we go back and and sum over all the prior jobs on the QPU in the last $672$ hours from the user of interest.  This is the \"used time\" for that user.  The usage for user $i$ is then given by\n",
    "\n",
    "$$\n",
    "\\mathrm{usage}_{i} = \\frac{\\mathrm{used~time}_{i}}{\\mathrm{share}_{i}*\\mathrm{window~time}}\n",
    "$$"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9341b2b6",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-25T22:22:27.674256Z",
     "start_time": "2022-07-25T22:22:27.669068Z"
    }
   },
   "source": [
    "<img src=\"fairshare_imgs/setup.png\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9cdaf3d4",
   "metadata": {},
   "source": [
    "Every time the QPU requests another job, it looks at the usage over all the users with jobs waiting, and selects the next job from the user with the least usage.  What this means is that the order in which jobs are processed is dynamic, and depends on an users usage relative to other users waiting for the system.  For example, you may have a job that at one moment is next in line to be executed when another user with lower usage jumps on and you get bumped back.  This is the fair-share scheduler attempting to balance the usage.  To see this in action we need to simulate the scheduling.  That will be our next task."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f7b9a2f9",
   "metadata": {},
   "source": [
    "<div class=\"info alert-info\">\n",
    "An astute reader may have noticed that the \"window time\" is not needed in the usage expression as it is a constant used on both sides of a relative expression.  This is indeed correct, and it is used here only to make the usage unit-less.  The shares given also need not be actual percentages, and can be anything you want provided that more shares equals more access.  Below we will discuss the \"queue slot\" units that IBM Quantum uses.\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8c112763",
   "metadata": {},
   "source": [
    "## Simulating fair-share scheduling\n",
    "\n",
    "Here we will create the code needed to simulate fair-share scheduling.  There are a few limitations that we must keep in mind.  1)  It is difficult to simulate fair-share starting from anything but a simple initial state.  2) We will use our assumption that all users are continuously submitting jobs to all QPUs. 3) The duration of jobs will be chosen randomly from a uniform distribution between `[0, max_job_time)`.\n",
    "\n",
    "In order to simulate fair-share we will need the notion of an \"User\"; a class object representing an user.  A collection of users, here called \"Users\" that tells the system the number of users that are available and their properties related to computing usage.  This is also important for processing jobs from multiple QPUs in parallel, which is what happens in the real world.\n",
    "\n",
    "The code below also uses \"queue slots\" in place of \"shares\" for the unit of access given to users.  This is a very IBM Quantum specific unit of access, and one queue-slot is equal to 5% access to a single QPU.  So each machine has 20 queue-slots of access; if you have a dedicated machine then you have 20 queue-slots of access. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "50d22648",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:42:14.495413Z",
     "start_time": "2022-07-26T13:42:14.488918Z"
    }
   },
   "outputs": [],
   "source": [
    "class User():\n",
    "    def __init__(self, queue_slots):\n",
    "        \"\"\" A User class for keeping track of usage from a single organization.\n",
    "        \"\"\"\n",
    "        self.queue_slots = queue_slots\n",
    "        self.index = 0\n",
    "        self.used_time = 0.0\n",
    "        \n",
    "    def __repr__(self):\n",
    "        return \"User<index: {}, queue_slots: {}, used_time: {}>\".format(self.index,\n",
    "                                                                        self.queue_slots, \n",
    "                                                                        np.round(self.used_time, 3))\n",
    "\n",
    "\n",
    "class Users():\n",
    "    def __init__(self):\n",
    "        \"\"\"A class that tracks shares, queue-slots, and usage across all organizations\n",
    "        \"\"\"\n",
    "        self.user_list = []\n",
    "        self.total_queue_slots = 0\n",
    "        self.index = 0\n",
    "\n",
    "    def append(self, user):\n",
    "        \"\"\"Add a new user and give it an id\n",
    "        \n",
    "        Parameters:\n",
    "            user (User): A user instance to add\n",
    "        \"\"\"\n",
    "        user.index = self.index\n",
    "        self.index += 1\n",
    "        self.user_list.append(user)\n",
    "        self.total_queue_slots += user.queue_slots\n",
    "        \n",
    "    def __getitem__(self, idx):\n",
    "        return self.user_list[idx]\n",
    "        \n",
    "    def __repr__(self):\n",
    "        return self.user_list.__repr__()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e12e4d9f",
   "metadata": {},
   "source": [
    "In addition to users, we also need a `Job` object that tells us which user submitted the job, the job durations, and the usage of the user at the time the job was chosen:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "id": "dddc0d3d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:42:15.008272Z",
     "start_time": "2022-07-26T13:42:15.004146Z"
    }
   },
   "outputs": [],
   "source": [
    "class Job():\n",
    "    def __init__(self, user_id, duration, usage):\n",
    "        \"\"\"A single Job\n",
    "        \"\"\"\n",
    "        self.user = user_id  # which user is the job from\n",
    "        self.duration = duration  # The duration of the job\n",
    "        self.timestamp = None  # When the job started\n",
    "        self.usage = usage  # The usage of the user when the job started\n",
    "        \n",
    "    def __repr__(self):\n",
    "        return \"Job<User: {}, duration: {}, usage: {}>\".format(self.user, \n",
    "                                                               np.round(self.duration,3),\n",
    "                                                               self.usage)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3eef8f56",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:23:11.377015Z",
     "start_time": "2022-07-26T13:23:11.373011Z"
    }
   },
   "source": [
    "We now turn to representing the QPUs themselves.  The `QPU` class is more complicated as it contains the threaded processing code as well as the `Users` object so that it can update the values contained in that object from the different threads. The `_start_processing` method does the actual simulated job execution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 39,
   "id": "b33dff94",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:42:15.422788Z",
     "start_time": "2022-07-26T13:42:15.412041Z"
    }
   },
   "outputs": [],
   "source": [
    "class QPU():\n",
    "    def __init__(self, users, window_time=168*4, max_job_time=4):\n",
    "        \"\"\"A class for representing a QPU that processes jobs in a\n",
    "        separate thread.\n",
    "        \n",
    "        Parameters:\n",
    "            users (Users): The class representing all users.\n",
    "            window_time (float): The duration of the floating window, default=672.\n",
    "            max_job_time (float): The maximum job duration. Should be << then window_time, default=8\n",
    "        \"\"\"\n",
    "        self.elapsed_time = 0  # The elapsed time accumulated on this QPU\n",
    "        self.job_history = []  # A history of all the jobs on this QPU\n",
    "        self.users = users  # Holds the user list for processing\n",
    "        self.window_time = window_time  # The window time\n",
    "        self.max_job_time = max_job_time  # The maximum job duration\n",
    "        self.rng = np.random.default_rng()  # Gives the QPU its own RNG\n",
    "        self.thread = None  # The thread doing the work\n",
    "        self.start_time = None # The start time of the job processing\n",
    "            \n",
    "    def __repr__(self):\n",
    "        return \"QPU<elapsed_time: {}, total_jobs: {}>\".format(self.elapsed_time, len(self.job_history))\n",
    "        \n",
    "    def _start_processing(self):\n",
    "        \"\"\"The actual routine that does the simulated job execution\n",
    "        \"\"\"\n",
    "        while self.elapsed_time < self.window_time:\n",
    "            # determine which user goes next\n",
    "            _next, _usage = next_user(self)\n",
    "            # Create a job for this user and randomly generate a job duration\n",
    "            job = Job(user_id=_next, \n",
    "                      duration=self.max_job_time*self.rng.random(),\n",
    "                      usage=_usage)\n",
    "            job.timestamp = datetime.datetime.now()\n",
    "            # Pause for the duration of the job (with a 1e-4 constant to make it fast)\n",
    "            time.sleep(job.duration*1e-4)\n",
    "            # Add the duration of the job to the identified user\n",
    "            self.users[_next].used_time += job.duration\n",
    "            # Add the duration to the QPU total time\n",
    "            self.elapsed_time += job.duration\n",
    "            # Add the job to the job history for the QPU\n",
    "            self.job_history.append(job)\n",
    "            \n",
    "    def run(self):\n",
    "        \"\"\"Start processing jobs in a separate thread\n",
    "        \"\"\"\n",
    "        self.thread = threading.Thread(target=self._start_processing)\n",
    "        self.thread.start()\n",
    "        \n",
    "    def join(self):\n",
    "        \"\"\"Join the thread when done\n",
    "        \"\"\"\n",
    "        self.thread.join()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ebbbda34",
   "metadata": {},
   "source": [
    "Ok we are almost done.  We just need to make a function that determines our usage as given by the above equation"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "2ae6f0db",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:42:16.085251Z",
     "start_time": "2022-07-26T13:42:16.081336Z"
    }
   },
   "outputs": [],
   "source": [
    "def usage(user, processor):\n",
    "    \"\"\"Computes the usage of a User\n",
    "    \n",
    "    Parameters:\n",
    "        user (User): The user\n",
    "        processor (QPU): The QPU\n",
    "        \n",
    "    Returns:\n",
    "        float: The usage for the User\n",
    "    \"\"\"\n",
    "    return user.used_time / (user.queue_slots * processor.window_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "34d7a96a",
   "metadata": {},
   "source": [
    "and make another function that computes the usage for all users, and selects the one with the lowest usage to go next"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "30f2fd69",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T13:42:15.652036Z",
     "start_time": "2022-07-26T13:42:15.647037Z"
    }
   },
   "outputs": [],
   "source": [
    "def next_user(processor):\n",
    "    \"\"\"Decide which user goes next based on their usage\n",
    "    \n",
    "    Parameters:\n",
    "        processor (QPU): The QPU determining which user is next\n",
    "    \n",
    "    Returns:\n",
    "        int: The ID of the selected user\n",
    "        float: The usage of the selected user\n",
    "    \"\"\"\n",
    "    users = processor.users\n",
    "    usage_numbers = np.array([usage(ptnr, processor) for ptnr in users.user_list])\n",
    "    idx = np.where(usage_numbers == np.min(usage_numbers))[0][0]\n",
    "    return idx, usage_numbers[idx]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "02c52dbe",
   "metadata": {},
   "source": [
    "## Fair-share simulation: One system, multiple users\n",
    "\n",
    "Let us simulate scheduling for a single system with three users with total queue-slot allocations of 20; we have allocated the entire system in terms of queue-slots."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "id": "93fe2feb",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:19:26.975441Z",
     "start_time": "2022-07-26T14:19:26.859898Z"
    }
   },
   "outputs": [],
   "source": [
    "# Define the number of QPUs and window time (the max job duration is implicitly set to 8)\n",
    "num_qpus = 1\n",
    "window_time = 168*4\n",
    "\n",
    "# Add 3 users with sum of queue-slots equal to 20\n",
    "users = Users()\n",
    "users.append(User(5))\n",
    "users.append(User(5))\n",
    "users.append(User(10))\n",
    "\n",
    "# Generate the QPUs\n",
    "processors = [QPU(users) for _ in range(num_qpus)]\n",
    "\n",
    "# Start the threads to run the simulated job execution\n",
    "[pro.run() for pro in processors]\n",
    "# Join the threads when done\n",
    "[pro.join() for pro in processors]; # semi-colon to supress null output"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "24b0a11d",
   "metadata": {},
   "source": [
    "You have now performed a fair-share scheduling simulation!  To see the results let us print out the accumulated on-chip time for each user:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "id": "51fb0551",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:19:27.279801Z",
     "start_time": "2022-07-26T14:19:27.275810Z"
    },
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "simulated_time: [169.3  167.69 335.93]\n"
     ]
    }
   ],
   "source": [
    "sim_time = np.round(np.array([user.used_time for user in users.user_list]), 2)\n",
    "print('simulated_time:', sim_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91cf1393",
   "metadata": {},
   "source": [
    "We see that the first two users use roughly the same amount of time (up to fluctuations inherent in our simulation method), where as the third user uses double the time for the others.  This is exactly what one should expect given that users 1 & 2 are given the same number of queue-slots, and user 3 is given double that.\n",
    "\n",
    "We now turn to a very important question: How much time do we expect each user to get given the number of queue-slots?  So far we have gone to great lengths NOT to discuss the amount of time that an user should get.  Instead we have focused on \"access\".  The reason is because **unless all users submit jobs continuously to all QPUs,there is no rigorous notion of expected amounts of time in the fair-share model**.  There are too many unknowns when operating outside of this assumption to be able to draw any conclusions at all.  This is why this assumption is extremely important, and why we have stuck with \"access\" until now.\n",
    "\n",
    "Because our simulations are working in this ideal regime we can convert the access given by queue-slots into time by converting them to a fraction and multiplying by the window time."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "id": "5e9f8374",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:19:27.642682Z",
     "start_time": "2022-07-26T14:19:27.638334Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "expected_time: [168. 168. 336.]\n"
     ]
    }
   ],
   "source": [
    "expected_time = np.array([(user.queue_slots*0.05) * window_time for user in users.user_list])\n",
    "print('expected_time:', expected_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "af0c0d3f",
   "metadata": {},
   "source": [
    "We see that the simulated times correspond nicely with these theoretical expectations.  The only difference is up to small fluctuations inherent in the way we create jobs.\n",
    "\n",
    "We can also look at other values of interest.  For example, how many jobs were executed from each user?"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "6b1c05df",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:20:04.211148Z",
     "start_time": "2022-07-26T14:20:04.084572Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 399,
       "width": 542
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "total_jobs = [0]*3\n",
    "\n",
    "for job in processors[0].job_history:\n",
    "    total_jobs[job.user] += 1\n",
    "\n",
    "plt.bar(['User 1', 'User 2', 'User 3'], total_jobs)\n",
    "plt.title('Jobs per user');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ac8f0cc9",
   "metadata": {},
   "source": [
    "Or, for example, we can look at the execution pattern of jobs to identify the order in which user jobs were executed:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 82,
   "id": "d74a58e8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:26:41.507688Z",
     "start_time": "2022-07-26T14:26:41.323592Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 418,
       "width": 564
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "which_user = []\n",
    "\n",
    "for job in processors[0].job_history[:21]:\n",
    "    which_user.append(job.user)\n",
    "    \n",
    "plt.plot(which_user, 'o--')\n",
    "plt.ylabel('User number')\n",
    "plt.xlabel('Job index')\n",
    "plt.title('History of first 20 jobs executed');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aaa12b71",
   "metadata": {},
   "source": [
    "Now it is important to remember that everything is relative, and depends in the usage of users verses others. So lets repeat the above example, but only give out half of the total queue-slots for a machine; 10 verses the full 20."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 86,
   "id": "5a494f15",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:58:24.426991Z",
     "start_time": "2022-07-26T14:58:24.310888Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "simulated_time: [167.73 168.67 337.73]\n"
     ]
    }
   ],
   "source": [
    "# Add 3 users with sum of queue-slots equal to 10\n",
    "users = Users()\n",
    "users.append(User(2.5))\n",
    "users.append(User(2.5))\n",
    "users.append(User(5))\n",
    "\n",
    "# Generate the QPUs\n",
    "processors = [QPU(users) for _ in range(num_qpus)]\n",
    "\n",
    "# Start the threads to run the simulated job execution\n",
    "[pro.run() for pro in processors]\n",
    "# Join the threads when done\n",
    "[pro.join() for pro in processors]; # semi-colon to supress null output\n",
    "\n",
    "sim_time = np.round(np.array([user.used_time for user in users.user_list]), 2)\n",
    "print('simulated_time:', sim_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5319f78c",
   "metadata": {},
   "source": [
    "Has we would have guessed, the total amount of time per user remains unchanged.  This is because in a relative expression we are free to multiple both sides by a number and leave the expression valid.  In this case it is dividing the shares (queue-slots) by 2, which is equal to multiplying the usage by a factor of 2.  Either way it does not change anything.\n",
    "\n",
    "This essentially the way that jobs were scheduled on IBM Quantum systems up to April 2022.  Each system had its own set of queue-slots, and users were given a fraction of these slots per system to which they had access.  The usage, and thus job processing, was computed per machine.  The above simulations would have been valid per machine, and the total usage, real or theoretical, could be computed by summing over all machines."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6bc40573",
   "metadata": {},
   "source": [
    "<img src=\"fairshare_imgs/oldway.png\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5252ced8",
   "metadata": {},
   "source": [
    "## Minimum access amount\n",
    "\n",
    "Although we are in principle free to set queue-slot (share) values to whatever we want, in practice this is not the case.  Because jobs are not infinitesimally small in duration, giving too small an access amount can lead to users with small fractions getting more than they should under the fair-share assumptions.  Preventing this from happening requires balancing the window time with the maximum allowed job duration.  The slide below shows that in the case of IBM Quantum a quarter of a queue-slot, 1.25%, is the smallest amount of access that can be given under the current operating parameters."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a66f9392",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:39:19.639542Z",
     "start_time": "2022-07-26T14:39:19.632534Z"
    }
   },
   "source": [
    "<img src=\"fairshare_imgs/minimum.png\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f2fc462f",
   "metadata": {},
   "source": [
    "## Fair-share simulation: Multiple systems, multiple users\n",
    "\n",
    "In mid-April 2022, IBM Quantum changed from fair-share scheduling per system to a global version where usage is computed by summing over jobs on all systems during the floating time window."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7dd1321f",
   "metadata": {},
   "source": [
    "<img src=\"fairshare_imgs/newway.png\"/>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3399a825",
   "metadata": {},
   "source": [
    "It is a simple extension of our code above to simulate this.  Here we just add another QPU and rerun with the same number of queue-slots allocated as before:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 87,
   "id": "c7b1fa01",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:58:41.620508Z",
     "start_time": "2022-07-26T14:58:41.510041Z"
    }
   },
   "outputs": [],
   "source": [
    "# Number of QPUs now 2\n",
    "num_qpus = 2\n",
    "\n",
    "# Add 3 users with sum of queue-slots equal to 20\n",
    "users = Users()\n",
    "users.append(User(5))\n",
    "users.append(User(5))\n",
    "users.append(User(10))\n",
    "\n",
    "# Generate the QPUs\n",
    "processors = [QPU(users) for _ in range(num_qpus)]\n",
    "\n",
    "# Start the threads to run the simulated job execution\n",
    "[pro.run() for pro in processors]\n",
    "# Join the threads when done\n",
    "[pro.join() for pro in processors]; # semi-colon to supress null output"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "49f355f9",
   "metadata": {},
   "source": [
    "Simulating as we did before we can compute the total amount of time used:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 88,
   "id": "4fd9466c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-26T14:58:50.265116Z",
     "start_time": "2022-07-26T14:58:50.260309Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "simulated_time: [336.84 338.97 672.95]\n"
     ]
    }
   ],
   "source": [
    "sim_time = np.round(np.array([user.used_time for user in users.user_list]), 2)\n",
    "print('simulated_time:', sim_time)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "54d2f50c",
   "metadata": {},
   "source": [
    "and find that the total time used is twice the amount that the queue-slots say we should get.  This is a general feature of this type of scheduling; When doing fair-share scheduling over `N` systems using a unique usage value, you get `N` times the total time expected from the queue-slot allocation.  So if you have arranged for 5% of access over a single-system, in the global model you would get $N * 5\\%$ total access.  Now, in practice this is not exactly how IBM Quantum implements fair-share, so this factor of `N` enhancement in total time is not really to be expected in most cases.  Also our assumption of continuous demand by all users over all systems is very ideal, and never observed in practice."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "3063576d",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.5"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
