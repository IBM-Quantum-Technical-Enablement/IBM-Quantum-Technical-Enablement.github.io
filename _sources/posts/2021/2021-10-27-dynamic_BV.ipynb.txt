{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dynamic Bernstein-Vazirani using mid-circuit reset and measurement\n",
    "\n",
    "```{post} 2021-10-27\n",
    ":author: Paul Nation\n",
    ":tags: Dynamic\n",
    ":category: Hardware\n",
    "```"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The ability to do mid-circuit reset and measurement unlocks a variety of tools for executing quantum circuits.  A brief discussion is given in this [IBM Research blog post](https://www.ibm.com/blogs/research/2021/02/quantum-mid-circuit-measurement/).  On particular possibility is the ability to reuse qubits, and in doing so reduce the hardware requirements of some algorithms.  The Bernstein-Vazirani (BV) algorithm is one such example.  In particular, when using phase-kickback, BV usually requires a high degree of qubit connectivity to impliment.  This has been used by trapped-ion hardware vendors to show that their hardware gives better fidelity on these problems, e.g. see ([https://arxiv.org/abs/2102.00371](https://arxiv.org/abs/2102.00371) and [https://www.nature.com/articles/s41467-019-13534-2](https://www.nature.com/articles/s41467-019-13534-2)).  However, with reset and measurement, BV requires only two qubits, making connectivity differences mute.  We showed this in a reply Tweet: [https://twitter.com/nonhermitian/status/1362348935440986113](https://twitter.com/nonhermitian/status/1362348935440986113), but did not explain how we got that figure.  So here is how I did it."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Frontmatter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 76,
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from qiskit import *\n",
    "from qiskit.quantum_info import hellinger_fidelity\n",
    "import matplotlib.pyplot as plt\n",
    "import seaborn as sns\n",
    "\n",
    "sns.set_style('darkgrid')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<AccountProvider for IBMQ(hub='ibm-q', group='open', project='main')>"
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "IBMQ.load_account()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Select the target backend\n",
    "\n",
    "Here we select the backend and extract its two-qubit gate coupling map.  This is not the same backend used in the original figure as, at the time or writing, that one is offline.  It is however the same processor family and revision."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "metadata": {},
   "outputs": [],
   "source": [
    "provider = IBMQ.get_provider(project='internal-test')\n",
    "backend = provider.backend.ibm_cairo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "metadata": {},
   "outputs": [],
   "source": [
    "cmap = backend.configuration().coupling_map"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Create circuits\n",
    "\n",
    "In BV each qubit corresponding to a '1' bit interacts with only the target qubit.  Moreover, since the state of the target qubit is an eigenstate of the `x` operator, the qubits remain unentangled, and the whole algorithm can be written using only two qubits provided that those qubits can be measured and reset mid-circuit.  The function below will create the circuit that does this for a given input bitstring:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "metadata": {},
   "outputs": [],
   "source": [
    "def bv_circ(bitstring):\n",
    "    \"\"\"Create a Bernstein-Vazirani circuit from a given bitstring.\n",
    "    \n",
    "    Parameters:\n",
    "        bitstring (str): A bitstring.\n",
    "        \n",
    "    Returns:\n",
    "        QuantumCircuit: Output circuit.\n",
    "    \"\"\"\n",
    "    qc = QuantumCircuit(2, len(bitstring))\n",
    "    qc.x(1)\n",
    "    qc.h(1)\n",
    "    for idx, bit in enumerate(bitstring[::-1]):\n",
    "        qc.h(0)\n",
    "        if int(bit):\n",
    "            qc.cx(0, 1)\n",
    "        qc.h(0)\n",
    "        qc.measure(0,idx)\n",
    "        qc.barrier([0,1])\n",
    "        qc.reset(0)\n",
    "        # reset control\n",
    "        qc.reset(1)\n",
    "        qc.x(1)\n",
    "        qc.h(1)\n",
    "        \n",
    "    return qc"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Finding the best two-qubits to use\n",
    "\n",
    "Let us look at an example circuit for a length 10 bitstring of all ones:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "metadata": {},
   "outputs": [],
   "source": [
    "bitstring = '1'*10\n",
    "\n",
    "qc = bv_circ(bitstring)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 1591.45x686.28 with 1 Axes>"
      ]
     },
     "execution_count": 44,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qc.draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "One can see that one qubit `q0` there are repeated measurement+reset operations that take place.  Every reset is itself a measurement followed by a conditional `x`-gate.  Therefore we are doing two measurements back-to-back each time we see that combination of operations.  Doing measurements like this can lead to issues.  Namely, for example, if the measurement cavity ring-down time is not short enough, the cavity could be non-empty the next time one performs a measurement and things can get messy.  It turns out to actually be a bit more complicated than that, so at the end of the day, we need to figure out which qubits are the best to us.  Here we will do that by performing a 10-digit BV experiment on every edge of the systems two-qubit coupling map.  We will take whichever one gives the best result as the edge to use for the actual experiment."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 62,
   "metadata": {},
   "outputs": [],
   "source": [
    "circs = []\n",
    "for edge in cmap:\n",
    "    trans_qc = transpile(qc, backend, initial_layout=edge)\n",
    "    circs.append(trans_qc)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 65,
   "metadata": {},
   "outputs": [],
   "source": [
    "job = execute(circs, backend, shots=8192)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Here we compute the fidelity of the output with the known answer to see which gets the closest and sort the results from best to worse in terms of the fidelity."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 66,
   "metadata": {},
   "outputs": [],
   "source": [
    "fids = [hellinger_fidelity(counts, {bitstring: 1}) for counts in job.result().get_counts()]\n",
    "sorted_fidelities, sorted_edges = zip(*sorted(zip(fids, cmap), reverse=True))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 67,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[12, 10] 0.787109375\n",
      "[15, 12] 0.7611083984375\n",
      "[21, 18] 0.7478027343749999\n",
      "[5, 8] 0.7426757812499999\n",
      "[10, 12] 0.7342529296875\n",
      "[14, 11] 0.7335205078125001\n",
      "[18, 17] 0.732177734375\n",
      "[11, 14] 0.7274169921875001\n",
      "[11, 8] 0.7211914062500001\n",
      "[15, 18] 0.7196044921875\n",
      "[17, 18] 0.7133789062499999\n",
      "[12, 13] 0.7061767578125\n",
      "[8, 5] 0.6993408203125001\n",
      "[2, 3] 0.6868896484375001\n",
      "[8, 11] 0.6839599609375001\n",
      "[13, 14] 0.6837158203125\n",
      "[14, 13] 0.683349609375\n",
      "[9, 8] 0.6793212890625\n",
      "[23, 24] 0.6715087890625\n",
      "[24, 25] 0.6627197265625001\n",
      "[5, 3] 0.6622314453125001\n",
      "[22, 19] 0.6545410156250001\n",
      "[13, 12] 0.6502685546875\n",
      "[4, 1] 0.650146484375\n",
      "[19, 22] 0.6381835937500001\n",
      "[10, 7] 0.6345214843750001\n",
      "[20, 19] 0.6341552734375\n",
      "[19, 20] 0.6315917968750002\n",
      "[7, 10] 0.6259765625000001\n",
      "[8, 9] 0.6256103515625001\n",
      "[14, 16] 0.6195068359375\n",
      "[1, 4] 0.608154296875\n",
      "[0, 1] 0.6065673828125001\n",
      "[22, 25] 0.6042480468750002\n",
      "[7, 4] 0.5914306640625001\n",
      "[2, 1] 0.5823974609375001\n",
      "[3, 5] 0.579833984375\n",
      "[1, 0] 0.578369140625\n",
      "[3, 2] 0.56298828125\n",
      "[25, 24] 0.5587158203125001\n",
      "[26, 25] 0.5572509765624999\n",
      "[25, 22] 0.5478515625000001\n",
      "[7, 6] 0.5463867187500001\n",
      "[16, 14] 0.540771484375\n",
      "[18, 21] 0.5361328124999999\n",
      "[1, 2] 0.5299072265625\n",
      "[25, 26] 0.5206298828125\n",
      "[24, 23] 0.5153808593750001\n",
      "[21, 23] 0.5070800781250001\n",
      "[16, 19] 0.48986816406250006\n",
      "[23, 21] 0.46118164062499994\n",
      "[19, 16] 0.38427734375000006\n",
      "[12, 15] 0.35766601562500006\n",
      "[18, 15] 0.34863281250000017\n",
      "[4, 7] 0.20458984375000003\n",
      "[6, 7] 0.14062500000000008\n"
     ]
    }
   ],
   "source": [
    "for idx, edge in enumerate(sorted_edges):\n",
    "    print(edge, sorted_fidelities[idx])"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can see from above that there is a very wide range of fidelities that come out.  This just goes to show that, when doing this on today's hardware, the choice of qubits matters quite a bit.  Having found the optimal edge on which to run, we now use that to do extended BV circuit runs."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Run actual experiment\n",
    "\n",
    "Here we choose a set of bitstring lengths to run and then execute this on the target backend edge that we identified earlier as the best candidate.  For fun, we will also run on the worst edge to see the difference."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 68,
   "metadata": {},
   "outputs": [],
   "source": [
    "bit_lengths = [1, 5, 10, 15, 20, 25, 30]\n",
    "\n",
    "circs = [bv_circ('1'*kk) for kk in bit_lengths]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 69,
   "metadata": {},
   "outputs": [],
   "source": [
    "trans_circs_best = transpile(circs, backend, initial_layout=sorted_edges[0])\n",
    "trans_circs_worst = transpile(circs, backend, initial_layout=sorted_edges[-1])"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "metadata": {},
   "outputs": [],
   "source": [
    "job2 = execute(trans_circs_best, backend, shots=8192)\n",
    "job3 = execute(trans_circs_worst, backend, shots=8192)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 71,
   "metadata": {},
   "outputs": [],
   "source": [
    "fids_best = []\n",
    "fids_worst = []\n",
    "for idx, counts in enumerate(job2.result().get_counts()):\n",
    "    fids_best.append(hellinger_fidelity(counts, {'1'*bit_lengths[idx]: 1}))\n",
    "    \n",
    "for idx, counts in enumerate(job3.result().get_counts()):\n",
    "    fids_worst.append(hellinger_fidelity(counts, {'1'*bit_lengths[idx]: 1}))"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plot results"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 89,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 576x432 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "label_best = \"{} {}\".format(backend.name(), sorted_edges[0])\n",
    "label_worst = \"{} {}\".format(backend.name(), sorted_edges[-1])\n",
    "\n",
    "fig, ax = plt.subplots(figsize=(8,6))\n",
    "ax.plot(bit_lengths, fids_best, 'H-', label=label_best, lw=2, ms=8)\n",
    "ax.plot(bit_lengths, fids_worst, 's-', label=label_worst, lw=2, ms=8)\n",
    "ax.set_xlabel('Bitstring length', fontsize=16)\n",
    "ax.set_ylabel('Fidelity', fontsize=16)\n",
    "ax.set_xlim([1, 30])\n",
    "ax.set_ylim([0, 1])\n",
    "ax.set_title('Fidelity of dynamic BV', fontsize=16)\n",
    "ax.legend(fontsize=14)\n",
    "ax.tick_params(axis='both', labelsize=14);"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.6"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
