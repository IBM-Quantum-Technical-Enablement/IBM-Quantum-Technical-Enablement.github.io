{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "664cd016",
   "metadata": {},
   "source": [
    "# Topic 3. Parametrized circuit "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "threatened-kernel",
   "metadata": {},
   "source": [
    "**Instructor** : Hwajung Kang, Ph.D., Education Delivery Program Manager, IBM Quantum"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "f0fff70d",
   "metadata": {},
   "outputs": [],
   "source": [
    "from qiskit import *\n",
    "from qiskit.result import sampled_expectation_value\n",
    "from qiskit.circuit import Parameter, ParameterVector\n",
    "from qiskit.providers.fake_provider import FakeLima, FakeWashington\n",
    "from qiskit.quantum_info import Statevector\n",
    "from qiskit.opflow import X, Y, Z\n",
    "from qiskit.visualization.bloch import Bloch\n",
    "from qiskit.circuit.library import ZZFeatureMap, EfficientSU2\n",
    "\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "import time\n",
    "\n",
    "import pandas as pd"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "julian-monitoring",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-info\">\n",
    "<ul>\n",
    "    <b>When to use?</b>\n",
    "    \n",
    "<li>The computation requires executing circuits with the same structure</li> \n",
    "    <br>\n",
    "    <b>Why to use?</b>\n",
    "    \n",
    "<li>No need to construct multiple circuits - build one circuit </li>\n",
    "<li>No need to transpile circuit multiple times - transpile circuit once</li>   \n",
    "</ul>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9b84a706",
   "metadata": {},
   "source": [
    "## Basics"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "19efb683",
   "metadata": {},
   "source": [
    "### Phase kickback"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "9f7e5945",
   "metadata": {},
   "outputs": [],
   "source": [
    "backend = FakeLima()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "c985ae32",
   "metadata": {},
   "outputs": [],
   "source": [
    "angles = np.linspace(0, 8*np.pi, 200)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "69052dc1",
   "metadata": {},
   "source": [
    "#### Without using parametrized circuit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "09a3b024",
   "metadata": {},
   "outputs": [],
   "source": [
    "start = time.time()\n",
    "\n",
    "qc_all = []\n",
    "for ang in angles:\n",
    "    qc = QuantumCircuit(2, 1)\n",
    "    qc.h(0)\n",
    "    qc.x(1)\n",
    "    qc.cp(ang, 0, 1)\n",
    "    qc.h(0)\n",
    "    qc.measure(0, 0)\n",
    "    qc_all.append(qc)\n",
    "\n",
    "qc_trans_all = transpile(qc_all, backend, optimization_level=3)\n",
    "\n",
    "finish = time.time()\n",
    "del_time1 = (finish - start)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "d7551b3c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "transpile time : 2.981s\n"
     ]
    }
   ],
   "source": [
    "print('transpile time : {}s'.format(np.round(del_time1, 3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f21475e9",
   "metadata": {},
   "source": [
    "#### Parametrized circuit version"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c62f232e",
   "metadata": {},
   "source": [
    "Build a parametrized circuit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "1e1f8578",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 327.252x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "theta = Parameter(name='θ')\n",
    "\n",
    "qc = QuantumCircuit(2, 1)\n",
    "qc.h(0)\n",
    "qc.x(1)\n",
    "qc.cp(theta, 0, 1)\n",
    "qc.h(0)\n",
    "qc.measure(0, 0)\n",
    "\n",
    "qc.draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "cff0b97b",
   "metadata": {},
   "source": [
    "Transpile parameterized circuit"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "6b4196aa",
   "metadata": {},
   "outputs": [],
   "source": [
    "start = time.time()\n",
    "\n",
    "theta = Parameter(name='θ')\n",
    "\n",
    "qc = QuantumCircuit(2, 1)\n",
    "qc.h(0)\n",
    "qc.x(1)\n",
    "qc.cp(theta, 0, 1)\n",
    "qc.h(0)\n",
    "qc.measure(0, 0)\n",
    "\n",
    "qc_trans = transpile(qc, backend, optimization_level=3)\n",
    "\n",
    "#Assign numerical values to the parameter\n",
    "qc_trans_all2 = []\n",
    "for ang in angles:\n",
    "    qc_trans_all2.append(qc_trans.bind_parameters({theta:ang}))\n",
    "    \n",
    "finish = time.time()\n",
    "del_time2 = finish - start"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "2fb427ac",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "transpile time : 0.072s\n"
     ]
    }
   ],
   "source": [
    "print('transpile time : {}s'.format(np.round(del_time2, 3)))"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7f7ba683",
   "metadata": {},
   "source": [
    "**Things to note**\n",
    "- Benefit of parametrized circuits grows with the number of circuits, circuit complexity, and the size of the backend as the time it takes for transpilation grows polynomially with the circuit size\n",
    "- As numerical parameter values are needed for many optimization steps, transpiling parameterized circuits may not yeild optimal results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "b2d5dea1",
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "without parametrizing circuit\n"
     ]
    },
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAuQAAAExCAYAAAA0v7dkAAAAOXRFWHRTb2Z0d2FyZQBNYXRwbG90bGliIHZlcnNpb24zLjMuMywgaHR0cHM6Ly9tYXRwbG90bGliLm9yZy/Il7ecAAAACXBIWXMAAAsTAAALEwEAmpwYAABBT0lEQVR4nO3deVxU9f7H8dcMq7gCLgi4r7krmLmiaandSm9pZtZF05tZdi338mrXTLupLbdNLfX2u+W+e801Fyq3EgElcwVF3EpBEVOEYX5/zHVyYNQBgQP4fj4ePBq+58z3fDgd57znO99zxmS1Wq2IiIiIiIghzEYXICIiIiJyL1MgFxERERExkAK5iIiIiIiBFMhFRERERAykQC4iIiIiYiAFchERERERAymQi4iIiIgYSIFcRERERMRACuQiIiIiIgZSIBcRERERMZACuYiIiIiIgRTIRUREREQMpEAuIiIiImIgBXIREREREQMpkIuIiIiIGEiBXERERETEQArkIiIiIiIGUiAXERERETGQArmIiIiIiIEUyEVEREREDKRALiIiIiJiIAVyEREREREDKZCLiIiIiBhIgVxERERExEAK5CIiIiIiBlIgFxERERExkAK5iIiIiIiBFMhFRERERAykQC4iIiIiYiAFchERERERAymQi4iIiIgYSIFcRERERMRACuQiIiIiIgZSIBcRERERMZACuYiIiIiIgYp9II+NjcVkMrF27VoA4uPjMZlMLF682L6Os7ai6tKlS7z44otUrFgRHx8f2rZtyw8//GB0WSIiIiJyC8U+kFeuXJmdO3fSpUsXACIjIwEIDQ21r+OsrSiyWq306NGDFStWMH36dFavXk358uV56KGHiIqKMro8EREREXHC3egC8pu/vz/+/v723yMjI/H19aVmzZq3bSuK1qxZQ0REBGvXrqV79+4AdOjQgYYNGzJu3Dj7pwQiIiIiUngU6Aj5tm3b6NmzJ1WqVMHb25ugoCAGDRrEpUuX7OuEhobSt29fli1bRqtWrfDx8aFGjRosWrTIaZ+rV6+mS5culCtXDh8fHxo3bszcuXPty1u1akXv3r3tv0dGRtKiRQuHPrK2uVJnbiUnJ9OtWzf27dvndLnVauXNN9/k1KlTOe571apV+Pv7061bN3ubp6cnTz/9NJs2beLKlSu5rltERERE8keBBvKYmBja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uEA0Jxd0ulJnQcjtfKY2bdqwZMkSPvroIy5fvoyfnx+tW7cmIiKCdu3a5XGVIiIiIpIXTNbCMlZfRHXs2JGhQ4fSq1cvo0sRERERkVu4MU3ln2NecHhcGBToFwMVJ+PHjyc4OJidO3cyePBggoODOXbsmNFliYiIiEgRo0CeS5MmTSIxMZG0tDQuXLhAYmIitWrVMrosERERESliFMhFRERERAykQC4iIiIiYiAFchERERERAymQi4iIiIgYSIFcRERERMRACuQiIiIiIgZSIBcRERERMZACuYiIiIiIgRTIRUREREQMpEAuIiIiImIgBXIREREREQMpkIuIiIiIGEiBXERERETEQArkIiIiIiIGUiAXERERETGQArmIiIiIiIEUyEVEREREDKRALiIiIiJiIAVyEREREREDKZCLiIiIiBhIgVxERERExEAK5CIiIiIiBlIgFxERERExkAK5iIiIiIiBFMhFRERERAykQC4iIiIiYiAFchERERERAymQi4iIiIgYSIFcRERERMRACuQiIiIiIgZSIBcRERERMVCxD+SxsbGYTCbWrl0LQHx8PCaTicWLF9vXcdZWHDz//POYTCZ69epldCkiIiIicgvuRheQ3ypXrszOnTtp0aIFAJGRkQCEhoba13HWVtRt3ryZxYsXU6ZMGaNLEREREZHbKPYj5P7+/jzwwAN4enoCtvDt6+tLzZo17es4ayvKrl69yuDBg5kwYQK+vr5GlyMiIiIit1GggXzbtm307NmTKlWq4O3tTVBQEIMGDeLSpUv2dUJDQ+nbty/Lli2jVatW+Pj4UKNGDRYtWuS0z9WrV9OlSxfKlSuHj48PjRs3Zu7cufblrVq1onfv3vbfIyMj7aPlt2pzpc7cSk5Oplu3buzbt8/pcqvVyptvvsmpU6dyvY0JEyZQsmRJhg8fnus+RERERKRgFGggj4mJoV27dsycOZONGzcyYcIEVq1axYgRIwDIyMggNjaW3bt38/HHHzNy5EhWrFhBxYoV6d+/PykpKQ79jR8/3h6c586dy7Jly3j88cdJSkoCwGKxsH//foewHRkZmW1qSta2O9V5N9LS0tiwYYO9xqySk5NZunQpYWFhnDx5Msf9R0ZG8q9//YtZs2bh7l7sZySJiIiIFHkFmtiGDRtmf5yZmUmbNm2IiYlh8+bNABw4cIC0tDTq1KnD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L9sQERERyS2z2cxTf+qIp6cHAKV8SvBEt/aF5tN93fawGIqMjKRDhw5UqVKFadOmUa1aNeLj49mxY0e+bG9n1AGuXL1G57Yh+dK/iIiIyN3yK1eGxzq3Ztm673iiewdK+ZQwuiQ7zSEvhjp27MiBAwc4cuQIZcuWzfHzx777eT5UJSIiInJv+eeYF1xaT1NWipnff/+d77//nr59++YqjIuIiIhIwdKUlWImOTmZzMzMu7phvavv5q5fT+fdmQsICijP8089kuvtiYiIiNzLFMiLGV9fX8xmM6dOncp1HzmdsnI4PlHTXERERESy0JSVe5SPjw8dOnRgwYIFpKSkGF2OiIiIiNyBLuoshm7cZaVatWqMHj2aatWqkZCQwPfff8/s2bPzZBsRu2NYt203Q57tQbWgSnnSp4iIiMi9SFNWiqGQkBB27tzJ+PHjee2117h27RpVqlTh6aefzpP+r19P57vdMdStEawwLiIiInKXNEIuOXb2tyS+XrGJ3n/qqEAuIiIicpcUyCVXMjMzMZt1CYKIiIjI3VIgFxERERExkIY4RUREREQMpEAuIiIiImIgBXIREREREQMpkIuIiIiIGEiBXERERETEQArkIiIiIiIGUiAXERERETGQArmIiIiIiIEUyEVEREREDKRALiIiIiJiIAVyEREREREDKZCLiIiIiBhIgVxERERExEAK5CIiIiIiBlIgFxERERExkAK5iIiIiIiBFMhFRERERAykQC4iIiIiYiAFchERERERAymQi4iIiIgYSIFcRERERMRACuQiIiIiIgZSIBcRERERMZACuYiIiIiIgRTIRUREREQMpEAuIiIiImIgBXIREREREQP9P9piW9Wp2C5nAAAAAElFTkSuQmCC",
      "text/plain": [
       "<Figure size 961.931x385.28 with 1 Axes>"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "k = 10\n",
    "print('without parametrizing circuit')\n",
    "qc_trans_all[k].draw('mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "690f5457",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "using parametrized circuit\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1202.73x385.28 with 1 Axes>"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "print('using parametrized circuit')\n",
    "qc_trans_all2[k].draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "300f3827",
   "metadata": {},
   "source": [
    "### Build parametrized circuit"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b2f909f",
   "metadata": {},
   "source": [
    "[u gate](https://qiskit.org/documentation/tutorials/circuits/3_summary_of_quantum_operations.html#Single-Qubit-Gates)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d16cbc7d",
   "metadata": {},
   "source": [
    "#### parameter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "834e87e3",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ┌──────────┐\n",
      "q: ┤ U(θ,γ,λ) ├\n",
      "   └──────────┘\n",
      "   ┌──────────┐\n",
      "q: ┤ U(1,2,3) ├\n",
      "   └──────────┘\n"
     ]
    }
   ],
   "source": [
    "theta, gamma, lam = Parameter('θ'), Parameter('γ'), Parameter('λ') \n",
    "myqc1 = QuantumCircuit(1)\n",
    "myqc1.u(theta, gamma, lam, 0)\n",
    "print(myqc1)\n",
    "\n",
    "myvals = [1, 2, 3]\n",
    "mybc1 = myqc1.bind_parameters({theta:1, gamma:2, lam:3})\n",
    "#mybc1 = myqc1.assign_parameters(myvals)\n",
    "print(mybc1)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a5256d34",
   "metadata": {},
   "source": [
    "Note: The parameter values are assigned in the alphabetical order rather than the insertion order when `assign_parameters` method is used."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39fe00ee",
   "metadata": {},
   "source": [
    "#### parameter vector"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "81614313",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ┌───────────────────┐\n",
      "q: ┤ U(φ[0],φ[1],φ[2]) ├\n",
      "   └───────────────────┘\n",
      "   ┌──────────┐\n",
      "q: ┤ U(1,2,3) ├\n",
      "   └──────────┘\n"
     ]
    }
   ],
   "source": [
    "ang = ParameterVector('φ', 3)\n",
    "myqc2 = QuantumCircuit(1) \n",
    "myqc2.u(*ang, 0)\n",
    "print(myqc2)\n",
    "\n",
    "mybc2 = myqc2.assign_parameters(myvals)\n",
    "#mybc2 = myqc2.bind_parameters({ang:myvals})\n",
    "print(mybc2)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "51a5ba02",
   "metadata": {},
   "source": [
    "#### partial binding"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "58a36736",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ┌──────────┐\n",
      "q: ┤ U(θ,γ,λ) ├\n",
      "   └──────────┘\n",
      "   ┌──────────┐\n",
      "q: ┤ U(1,2,λ) ├\n",
      "   └──────────┘\n"
     ]
    }
   ],
   "source": [
    "theta, gamma, lam = Parameter('θ'), Parameter('γ'), Parameter('λ') \n",
    "myqc1 = QuantumCircuit(1)\n",
    "myqc1.u(theta, gamma, lam, 0)\n",
    "print(myqc1)\n",
    "\n",
    "myvals = [1, 2, 3]\n",
    "mybc1 = myqc1.bind_parameters({theta:1, gamma:2})\n",
    "print(mybc1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "fb8e7793",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "   ┌────────────────┐\n",
      "q: ┤ U(δ[0],δ[1],ε) ├\n",
      "   └────────────────┘\n",
      "   ┌──────────┐\n",
      "q: ┤ U(1,2,ε) ├\n",
      "   └──────────┘\n"
     ]
    }
   ],
   "source": [
    "two_angs, one_ang = ParameterVector('δ', 2), Parameter('ε')\n",
    "myqc3 = QuantumCircuit(1)\n",
    "myqc3.u(*two_angs, one_ang, 0)\n",
    "print(myqc3)\n",
    "\n",
    "mybc3 = myqc3.bind_parameters({two_angs:[1, 2]})\n",
    "print(mybc3)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "significant-speed",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-success\">\n",
    "    <h3>Hands-on exercise 1.</h3>\n",
    "    <p>\n",
    "    Build a five qubit quantum circuit where a `rx` gate with an unique parametrized angle is applied to each qubit. Then apply `cp` gates with different parametrized angles between the $k$th and $k$th+1 qubits.\n",
    "Assign numerical values that you want only to `cp` gates.\n",
    "    </p>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "26b332d1",
   "metadata": {},
   "outputs": [],
   "source": [
    "## your code goes here\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6fb964e6",
   "metadata": {},
   "source": [
    "## Usecase 1. Data Encoding - Quantum feature map for QSVM "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "66304ff7",
   "metadata": {},
   "source": [
    "QSVM : Quantum Support Vector Machine\n",
    "- Reference : [_Havlicek et al_.  Nature **567**, 209-212 (2019)](https://www.nature.com/articles/s41586-019-0980-2)"
   ]
  },
  {
   "attachments": {},
   "cell_type": "markdown",
   "id": "plain-archive",
   "metadata": {},
   "source": [
    "\n",
    "![QSVM](images/QSVM_1d.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9376161b",
   "metadata": {},
   "source": [
    "### 1-dim data"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "3af8c09c",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1.80770902 3.75492036 2.34022183 1.86887147 2.55570434]\n"
     ]
    },
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 314.126x84.28 with 1 Axes>"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "num = 500\n",
    "data = 2 * np.pi * np.random.rand(num)\n",
    "print(data[:5])\n",
    "\n",
    "x = Parameter(name='x')\n",
    "qc_data = QuantumCircuit(1)\n",
    "qc_data.h(0)\n",
    "qc_data.rz(x, 0)\n",
    "qc_data.h(0)\n",
    "qc_data.rz(x, 0)\n",
    "\n",
    "qc_data.draw('mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "79b1d04a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "Xop, Yop, Zop = X.to_matrix(), Y.to_matrix(), Z.to_matrix()\n",
    "\n",
    "def state_to_bloch(state_vec):\n",
    "    phi = st.data\n",
    "    bx = phi.conjugate() @ Xop @ phi\n",
    "    by = phi.conjugate() @ Yop @ phi\n",
    "    bz = phi.conjugate() @ Zop @ phi\n",
    "    return [bx, by, bz]\n",
    "\n",
    "\n",
    "st_data = [Statevector.from_instruction(qc_data.assign_parameters([dat]))for dat in data]\n",
    "\n",
    "fig = plt.figure()\n",
    "ax = fig.add_subplot(1, 1, 1, projection='3d')\n",
    "b = Bloch(axes=ax)\n",
    "b.point_color = ['tab:blue']\n",
    "b.point_marker = ['o']\n",
    "b.point_size =[2]\n",
    "\n",
    "for st in st_data:\n",
    "    v = state_to_bloch(st)\n",
    "    b.add_points(v)\n",
    "    \n",
    "b.show()\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e2bd0fa8",
   "metadata": {},
   "source": [
    "### N-dim data \n",
    "- Check out **Data encoding circuits** in [Qiskit circuit library](https://qiskit.org/documentation/apidoc/circuit_library.html)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e822c62c",
   "metadata": {},
   "source": [
    "**[ZZFeatureMap](https://qiskit.org/documentation/stubs/qiskit.circuit.library.ZZFeatureMap.html)**\n",
    "\n",
    "$$\\mathcal{U}_{\\Phi(\\mathbf{x})} = \\left( \\exp\\left(i\\sum_{jk} \\phi_{\\{j,k\\}}(\\mathbf{x}) \\, Z_j \\otimes Z_k\\right) \\, \\exp\\left(i\\sum_j \\phi_{\\{j\\}}(\\mathbf{x}) \\, Z_j\\right) \\, H^{\\otimes n} \\right)^d,$$ \n",
    "\n",
    "where $$\\phi_S:\\mathbf{x}\\mapsto \\Bigg\\{\\begin{array}{ll}\n",
    "    x_i & \\mbox{if}\\ S=\\{i\\} \\\\\n",
    "        (\\pi-x_i)(\\pi-x_j) & \\mbox{if}\\ S=\\{i,j\\}\n",
    "    \\end{array}.$$\n",
    "    \n",
    "`ZZFeatureMap` is defined as:\n",
    "```python\n",
    "ZZFeatureMap(feature_dimension, reps=2, \n",
    "             entanglement='full', data_map_func=None,\n",
    "             parameter_prefix='x', insert_barriers=False)\n",
    "```"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "7678d44a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>feat1</th>\n",
       "      <th>feat2</th>\n",
       "      <th>feat3</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.881035</td>\n",
       "      <td>1.934132</td>\n",
       "      <td>1.968311</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>2.585428</td>\n",
       "      <td>4.760217</td>\n",
       "      <td>4.896926</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>2.622616</td>\n",
       "      <td>3.616151</td>\n",
       "      <td>3.946556</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>3.205027</td>\n",
       "      <td>0.563507</td>\n",
       "      <td>2.827244</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4.247817</td>\n",
       "      <td>4.194069</td>\n",
       "      <td>0.468430</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      feat1     feat2     feat3\n",
       "0  0.881035  1.934132  1.968311\n",
       "1  2.585428  4.760217  4.896926\n",
       "2  2.622616  3.616151  3.946556\n",
       "3  3.205027  0.563507  2.827244\n",
       "4  4.247817  4.194069  0.468430"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data = 2 * np.pi * np.random.rand(5, 3)\n",
    "\n",
    "df = pd.DataFrame(data)\n",
    "df.rename(columns=dict(zip(df.columns, ['feat1', 'feat2', 'feat3'])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "1786b56b",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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",
      "text/plain": [
       "<Figure size 1110x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feat_map = ZZFeatureMap(3, reps=1)\n",
    "feat_map.decompose().draw('mpl')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "5344ed33",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "the number of quantum circuits : 5\n"
     ]
    },
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1110x204.68 with 1 Axes>"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "feat_map_data = [feat_map.assign_parameters(dat) for dat in data]\n",
    "print('the number of quantum circuits : {}'.format(len(feat_map_data)))\n",
    "feat_map_data[2].decompose().draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "liquid-moderator",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-success\">\n",
    "    <h3>Hands-on exercise 2.</h3>\n",
    "    <p>\n",
    "    Encode the following data, `data_ex`, using the `ZZFeatureMap` with 2 repetition.</p>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "id": "7a0ec9de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>feat1</th>\n",
       "      <th>feat2</th>\n",
       "      <th>feat3</th>\n",
       "      <th>feat4</th>\n",
       "      <th>feat5</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>3.704409</td>\n",
       "      <td>1.459107</td>\n",
       "      <td>6.739444</td>\n",
       "      <td>4.323264</td>\n",
       "      <td>0.086875</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4.241889</td>\n",
       "      <td>0.249897</td>\n",
       "      <td>2.312293</td>\n",
       "      <td>6.213391</td>\n",
       "      <td>1.473847</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>6.876573</td>\n",
       "      <td>3.490116</td>\n",
       "      <td>4.389322</td>\n",
       "      <td>2.049181</td>\n",
       "      <td>2.007776</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>6.122943</td>\n",
       "      <td>5.922220</td>\n",
       "      <td>5.803088</td>\n",
       "      <td>3.855043</td>\n",
       "      <td>0.672778</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>6.881514</td>\n",
       "      <td>1.513573</td>\n",
       "      <td>1.769233</td>\n",
       "      <td>4.358420</td>\n",
       "      <td>5.626670</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>6.151869</td>\n",
       "      <td>6.406123</td>\n",
       "      <td>0.927164</td>\n",
       "      <td>0.141903</td>\n",
       "      <td>0.015043</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>4.336908</td>\n",
       "      <td>4.309183</td>\n",
       "      <td>4.286459</td>\n",
       "      <td>2.714046</td>\n",
       "      <td>5.321975</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>6.416338</td>\n",
       "      <td>5.221135</td>\n",
       "      <td>6.280145</td>\n",
       "      <td>1.136737</td>\n",
       "      <td>1.975622</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>5.557404</td>\n",
       "      <td>2.722492</td>\n",
       "      <td>0.062022</td>\n",
       "      <td>0.001664</td>\n",
       "      <td>4.878389</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>2.420501</td>\n",
       "      <td>1.576014</td>\n",
       "      <td>5.970689</td>\n",
       "      <td>1.451910</td>\n",
       "      <td>2.274011</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "      feat1     feat2     feat3     feat4     feat5\n",
       "0  3.704409  1.459107  6.739444  4.323264  0.086875\n",
       "1  4.241889  0.249897  2.312293  6.213391  1.473847\n",
       "2  6.876573  3.490116  4.389322  2.049181  2.007776\n",
       "3  6.122943  5.922220  5.803088  3.855043  0.672778\n",
       "4  6.881514  1.513573  1.769233  4.358420  5.626670\n",
       "5  6.151869  6.406123  0.927164  0.141903  0.015043\n",
       "6  4.336908  4.309183  4.286459  2.714046  5.321975\n",
       "7  6.416338  5.221135  6.280145  1.136737  1.975622\n",
       "8  5.557404  2.722492  0.062022  0.001664  4.878389\n",
       "9  2.420501  1.576014  5.970689  1.451910  2.274011"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "data_ex = 7*np.random.rand(10, 5)\n",
    "\n",
    "df_ex = pd.DataFrame(data_ex)\n",
    "df_ex.rename(columns=dict(zip(df_ex.columns,['feat1', 'feat2', 'feat3', 'feat4', 'feat5'])))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "5aa751c0",
   "metadata": {},
   "outputs": [],
   "source": [
    "## your code goes here\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e5ee0074",
   "metadata": {},
   "source": [
    "## Usecase 2. Ansatz preparation- VQA"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae109874",
   "metadata": {},
   "source": [
    "VQA : Variational Quantum Algorithm"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3deeade0",
   "metadata": {},
   "source": [
    "- Check out the section **N-local circuits** in [Qiskit circuit library](https://qiskit.org/documentation/apidoc/circuit_library.html)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a43f64a5",
   "metadata": {},
   "source": [
    "**[EfficientSU2](https://qiskit.org/documentation/stubs/qiskit.circuit.library.EfficientSU2.html#qiskit.circuit.library.EfficientSU2)**\n",
    "\n",
    "`EfficientSU2` is a parametrized quantum circuit generating a hardware efficient, heuristic ansatz with alternating rotation and entanglement layer, which is used for variational quantum algorithms or classification circuit for machine learning.\n",
    "\n",
    "```python\n",
    "EfficientSU2(num_qubits=None, su2_gates=None, entanglement='reverse_linear', \n",
    "             reps=3, skip_unentangled_qubits=False, \n",
    "             skip_final_rotation_layer=False, parameter_prefix='θ',\n",
    "             insert_barriers=False, initial_state=None)\n",
    "```\n",
    "\n",
    "Check [TwoLocal](https://qiskit.org/documentation/stubs/qiskit.circuit.library.TwoLocal.html#qiskit.circuit.library.TwoLocal) for entanglement strategies."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aging-treaty",
   "metadata": {},
   "source": [
    "<div class=\"alert alert-success\">\n",
    "    <h3>Hands-on exercise 3.</h3>\n",
    "    <p>\n",
    "    Build a circuit to generate a hardware efficient ansatz for a 5 qubit system through `EfficientSU2` with 3 repetitions, using `h` and `rz` gates for `su2_gates`, implementing the `entangler_map` $= [[2, 1], ~ [1, 0], ~ [2, 3], ~[3, 4]]$.</p>\n",
    "</div>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "ed1093fb",
   "metadata": {},
   "outputs": [],
   "source": [
    "## your code goes here"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3ba354bb",
   "metadata": {},
   "source": [
    "**Further Reading** \n",
    "- [Parametrized quantum circuits](https://learn.qiskit.org/course/machine-learning/parameterized-quantum-circuits#parameterized-1-0)\n",
    "- [Advanced Circuit](https://qiskit.org/documentation/tutorials/circuits_advanced/01_advanced_circuits.html)\n",
    "- [PauliFeatureMap](https://qiskit.org/documentation/stubs/qiskit.circuit.library.PauliFeatureMap.html#qiskit.circuit.library.PauliFeatureMap)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "beautiful-broadcasting",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<h3>Version Information</h3><table><tr><th>Qiskit Software</th><th>Version</th></tr><tr><td><code>qiskit-terra</code></td><td>0.22.3</td></tr><tr><td><code>qiskit-aer</code></td><td>0.11.1</td></tr><tr><td><code>qiskit-ignis</code></td><td>0.6.0</td></tr><tr><td><code>qiskit-ibmq-provider</code></td><td>0.19.2</td></tr><tr><td><code>qiskit</code></td><td>0.39.3</td></tr><tr><td><code>qiskit-nature</code></td><td>0.5.0</td></tr><tr><td><code>qiskit-optimization</code></td><td>0.4.0</td></tr><tr><th>System information</th></tr><tr><td>Python version</td><td>3.7.9</td></tr><tr><td>Python compiler</td><td>Clang 10.0.0 </td></tr><tr><td>Python build</td><td>default, Aug 31 2020 07:22:35</td></tr><tr><td>OS</td><td>Darwin</td></tr><tr><td>CPUs</td><td>8</td></tr><tr><td>Memory (Gb)</td><td>32.0</td></tr><tr><td colspan='2'>Mon Dec 12 16:35:09 2022 EST</td></tr></table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import qiskit.tools.jupyter\n",
    "%qiskit_version_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "early-moral",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
