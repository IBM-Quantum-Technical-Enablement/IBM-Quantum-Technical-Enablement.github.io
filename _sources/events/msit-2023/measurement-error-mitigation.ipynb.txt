{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6e5d398a",
   "metadata": {},
   "source": [
    "# Mesurement error mitigation"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "17a9ffa3",
   "metadata": {},
   "source": [
    "## Overview\n",
    "\n",
    "On superconducting platforms such as IBM Quantum systems, measurements have one of the highest (it not the highest) error rate per operation of any instruction.  Although quantum circuits often contain many more gates than measurements, the output of a quantum computer relies on qubit measurement, making the correction of these operations an important task for achieving high-fidelity results.  Fortunately, techniques have been developed that make mitigating these errors, on average, computationally feasible.  However, as with all mitigation methods, the cost is an increase in the variance of the computed observables; requiring an increase in the number of circuit executions needed for recovering the initial variance.  Here we will look at the \"M3\" method that the Runtime uses to mitigate errors in the `Sampler` primitive.\n",
    "\n",
    "- M3 Paper: [PRX Quantum 2, 040326 (2021)](https://doi.org/10.1103/PRXQuantum.2.040326)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "0fdf07a5",
   "metadata": {},
   "source": [
    "## Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "e9687305",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:02.818835Z",
     "start_time": "2022-11-14T15:58:00.991814Z"
    }
   },
   "outputs": [],
   "source": [
    "# Standard imports\n",
    "import numpy as np\n",
    "from qiskit import *\n",
    "\n",
    "# Load stuff needed for this notebook\n",
    "from qiskit.quantum_info import Statevector, hellinger_fidelity\n",
    "from qiskit.providers.fake_provider import FakeProvider\n",
    "from qiskit.result import sampled_expectation_value\n",
    "\n",
    "# IBM Quantum Runtime account and primitives\n",
    "from qiskit_ibm_runtime import QiskitRuntimeService, Sampler\n",
    "\n",
    "# Plotting stuff to look better\n",
    "import matplotlib.pyplot as plt\n",
    "%config InlineBackend.figure_format = 'retina'\n",
    "try:\n",
    "    plt.style.use('quantum-light')\n",
    "except: pass"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "340ec18b",
   "metadata": {},
   "source": [
    "Lets load our IBM Quantum account and grab a real system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "f1f8ea1d",
   "metadata": {},
   "outputs": [],
   "source": [
    "service = QiskitRuntimeService()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "552341ec",
   "metadata": {},
   "outputs": [],
   "source": [
    "backend = service.get_backend('ibm_cleveland')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "id": "83a3dae9",
   "metadata": {},
   "outputs": [],
   "source": [
    "sampler = Sampler(backend)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "938e1bc0",
   "metadata": {},
   "source": [
    "## Background\n",
    "\n",
    "Although the power of quantum computation lies in the ability to create large amounts of entanglement and explore large swaths of Hilbert space, at the end of the day the result encoded in the terminal quantum state must be converted to classical information by measuring the qubits.  Note that there is also the possibility of mid-circuit measurements, but we will not address those here.\n",
    "\n",
    "When measureing a qubit, there are two error rates that quantify the noise:\n",
    "\n",
    "- $P_{10}$: Probability of qubit in the $0$ state but measuring $1$.\n",
    "\n",
    "- $P_{01}$: Probability of qubit in the $1$ state but measuring $0$.\n",
    "\n",
    "The probabilities of correctly measuring the qubit in the 0 and 1 states are thus $P_{00}=1-P_{10}$ and $P_{11}=1-P_{01}$, respectively."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "id": "ed5405ef",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.210582Z",
     "start_time": "2022-11-14T15:58:02.821464Z"
    }
   },
   "outputs": [],
   "source": [
    "props = backend.properties()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "75dfb622",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.217063Z",
     "start_time": "2022-11-14T15:58:03.213290Z"
    }
   },
   "outputs": [],
   "source": [
    "P01 = props.qubit_property(0, 'prob_meas0_prep1')[0]\n",
    "P10 = props.qubit_property(0, 'prob_meas1_prep0')[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5b9c0941",
   "metadata": {},
   "source": [
    "Assuming the measurement error for each qubit is uncorrelated with that of other qubits, we can define an Assignment, \"A-matrix\", for each qubit:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "id": "41455e64",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.230045Z",
     "start_time": "2022-11-14T15:58:03.220511Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[0.9646, 0.0406],\n",
       "       [0.0354, 0.9594]])"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Build the \"Assignment\" matrix\n",
    "A0 = np.array([[1-P10, P01],\n",
    "               [P10, 1-P01]])\n",
    "A0"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "id": "ad2cee5f",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.689974Z",
     "start_time": "2022-11-14T15:58:03.231930Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 400x400 with 2 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 324,
       "width": 415
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots(figsize=(4,4))\n",
    "\n",
    "im = ax.matshow(A0)\n",
    "ax.grid(False)\n",
    "# Coordinates for annotations are (x,y) NOT matrix (row, col)\n",
    "ax.annotate('$P_{00}$', (0,0), fontsize=16, ha='center', va='center')\n",
    "ax.annotate('$P_{11}$', (1,1), fontsize=16, ha='center', va='center')\n",
    "ax.annotate('$P_{01}$', (1,0), fontsize=16, ha='center', va='center', color='white')\n",
    "ax.annotate('$P_{10}$', (0,1), fontsize=16, ha='center', va='center', color='white')\n",
    "ax.set_xticks([0, 1])\n",
    "ax.set_xticklabels(['$|0\\\\rangle_{\\\\rm in}$', '$|1\\\\rangle_{\\\\rm in}$'])\n",
    "ax.set_yticks([0, 1])\n",
    "ax.set_yticklabels(['$|0\\\\rangle_{\\\\rm out}$', '$|1\\\\rangle_{\\\\rm out}$'])\n",
    "fig.colorbar(im, shrink=0.8);"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "8b84a564",
   "metadata": {},
   "source": [
    "The interpretation of the A-matrix is as follows.  The column indices label the target bit-string state, while the row indicates what you actually got in your experiment.  Thus we see that the matrix elements $P_{ij}$ tell us the probability of starting in state $j$, but ending up in state $i$.  Typically $P_{01} > P_{10}$ because relaxation of the $|1\\rangle$ state to the $|0\\rangle$ is the dominante source of error. Notice that the sum over all the elements of each column is `1`; an input bit-string has to go somehwere."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5e26ce98",
   "metadata": {},
   "source": [
    "The average of the two error rates, $P_{01}$ and $P_{10}$, is called the ``readout_error`` and it is also reported by the backend for each qubit:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "id": "569a2b92",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.698326Z",
     "start_time": "2022-11-14T15:58:03.693061Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(0.038000000000000034,\n",
       " datetime.datetime(2023, 7, 27, 0, 43, 42, tzinfo=tzlocal()))"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "props.qubit_property(0, 'readout_error')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "9084040f",
   "metadata": {},
   "source": [
    "Lets take a look at the distribution of these values over a full system:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "id": "d8490f0c",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.706913Z",
     "start_time": "2022-11-14T15:58:03.701077Z"
    }
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Median: 0.02540000000000009\n",
      "Mean: 0.03398267716535433\n"
     ]
    }
   ],
   "source": [
    "meas_errors = [props.qubit_property(qubit, 'readout_error')[0] \n",
    "               for qubit in range(backend.configuration().num_qubits)]\n",
    "\n",
    "print('Median:', np.median(meas_errors))\n",
    "print('Mean:', np.mean(meas_errors))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "id": "c053a7a8",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:03.960080Z",
     "start_time": "2022-11-14T15:58:03.709597Z"
    },
    "tags": []
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 800x600 with 1 Axes>"
      ]
     },
     "metadata": {
      "image/png": {
       "height": 554,
       "width": 768
      }
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "fig, ax = plt.subplots()\n",
    "ax.hist(meas_errors, bins=27)\n",
    "ax.set_xlabel('Error rate');\n",
    "ax.set_ylabel('Counts');"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "bada2415-1eaa-4938-9c34-196c8644191a",
   "metadata": {},
   "source": [
    "We see that the error rates can vary by and order of magnitude over a quantum chip.  Therefore qubit selection and ultimately readout mitigation is needed to reduce the impact of measurement imperfections.  How to do this is the topic of the next section."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "77eed1cb-ef16-4903-b09c-3ac991c17cc4",
   "metadata": {},
   "source": [
    "## Mitigating measurement errors"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "06fe0d0d",
   "metadata": {},
   "source": [
    "The A-matrix leads us to a very simple linear expression for how measurement errors affect our output probability distribution:\n",
    "\n",
    "$$\n",
    "\\vec{p}_{\\rm exp} = A\\vec{p}_{\\rm ideal}\n",
    "$$\n",
    "\n",
    "where $\\vec{p}_{\\rm ideal}$ is a vector representation of the ideal distribution (including gate errors) over all computational basis states, and $\\vec{p}_{\\rm exp}$ is the actual distribution we measured in the experiment.  This equation is valid for not just a single qubit, but any number of measured qubits, but the dimensionality of the full linear system of equations grows exponentially in the number of qubits.  Assuming readout out errors are independent, the full A-matrix takes the form:  $A=A_{n-1}\\otimes\\dots\\otimes A_{1}\\otimes A_{0}$ "
   ]
  },
  {
   "cell_type": "markdown",
   "id": "987a5a07",
   "metadata": {},
   "source": [
    "The equation above is a linear equation of the form $A\\vec{x}=\\vec{b}$, where we are solving for the unknown vector $\\vec{x}=\\vec{p}_{\\rm ideal}$.  Let try solving it for a very simple example:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "id": "302a8ab9",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:05.482209Z",
     "start_time": "2022-11-14T15:58:03.962525Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "{0: -0.0021657288588431025, 1: 1.002165728858843}"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "qc = QuantumCircuit(1)\n",
    "qc.x(0)\n",
    "qc.measure_all()\n",
    "\n",
    "# Here we are using \"seed_simulator\" to fix the output\n",
    "probs = sampler.run(qc, shots=1e4, seed_simulator=12345).result().quasi_dists[0]\n",
    "probs"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f12cd8b6",
   "metadata": {},
   "source": [
    "Need to convert our dictionary to an array:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "id": "131757ff",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:05.495649Z",
     "start_time": "2022-11-14T15:58:05.488825Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.00216573,  1.00216573])"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "probs_vec = np.array([probs.get(0, 0), probs.get(1, 0)], dtype=float)\n",
    "probs_vec"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "id": "c09b10e4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:05.505004Z",
     "start_time": "2022-11-14T15:58:05.498696Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([-0.04628326,  1.04628326])"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "np.linalg.solve(A0, probs_vec)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a8fa206f-0407-46b3-adc7-aa619e130965",
   "metadata": {},
   "source": [
    "After running the above code you should see that the probability of getting `'1'` is nearly 1.0.  In fact it can be even larger than 1, with a negative probability for being found in the `'0'` state!  This is not an error or bug, but rather a consequence of the fact that there are fluctuations in sampling statistics that can lead to over- or under-correction.  The output from measurement mitigation is a wider class of distibutions known as quasi-probability distributions; Distributions that can contain negative values, but never the less sum up to one.  This fact raises an important limitation on what we can do with these distributions; **Quasi-probability distributions can only be directly used to compute expectation values of observables or finding the most probable bit-string**.  They cannot be used, for example, for computing the fidelity of the result against a known answer."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ae84a35e",
   "metadata": {},
   "source": [
    "## Measurement mitigation with M3\n",
    "\n",
    "Given the realatively high error rates of measurements on superconducting processors, we would like to suppress these errors as much as possible.  Now, we could naively find the A-matrix corresponding to each measured qubit and take the tensor product of them all.  However, this leads to a $2^{N}\\times 2^{N}$ matrix that is tractible for only a small number of qubits, e.g. $\\lesssim 18$.  In order to correct large numbers of qubits we need to be a bit smarter than this. \n",
    "\n",
    "The M3 (**M**atrix-free **M**easurement **Mitigation**) is one example that looks at the problem in a different way."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "6f8801b4",
   "metadata": {},
   "source": [
    "![M3](images/meas_mitigation/m3_truncation.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3f8f0f89",
   "metadata": {},
   "source": [
    "Namely, M3 considers the fact that, when measurement errors are small, the effect is to take small amounts of probability away from the correct output bit-strings and move them to erroneous bit-strings that are close in terms of Hamming distance.  Because the errors are weak, with sufficient sampling, it is unlikely that an ideal bit-string is completely redistributed; the correct answer is a subset of the noisy output.  This insight indicates that we can truncate the full A-matrix into one that has a dimension that is equal to the number of unique bit-strings in the output.  This equation is typically much much smaller than the full A-matrix, and thus easier to solve, e.g. via LU decomposition or iterative methods."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5fffc2b5",
   "metadata": {},
   "source": [
    "M3 measurement mitigation can be broken into 3 steps:\n",
    "\n",
    "1. Construct a mitigator targeting a backend (`backend`)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "1ef23380",
   "metadata": {},
   "source": [
    "2. Use the mitigator `mit` to calibrate over a list of physical qubits (`qubits`) measured"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "aed3060c",
   "metadata": {},
   "source": [
    "3. Generate a corrected set of quasiprobabilities from a given set of noisy counts data"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "16f3b946",
   "metadata": {},
   "source": [
    "We can then use these quasiprobabilities to evaluate problems such as those for sampling algorithms, which is why it is in the `Sampler`, and / or algorithms that compute expectation values (but in the Runtime, that is a different method)."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7ad29f71",
   "metadata": {},
   "source": [
    "## Example\n",
    "\n",
    "To begin, let us consider our usual all-ones BV circuit:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "id": "1fbe200d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:05.986112Z",
     "start_time": "2022-11-14T15:58:05.507933Z"
    }
   },
   "outputs": [
    {
     "data": {
      "image/png": "",
      "text/plain": [
       "<Figure size 1123.61x535.111 with 1 Axes>"
      ]
     },
     "execution_count": 36,
     "metadata": {
      "image/png": {
       "height": 453,
       "width": 930
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "def bv_ones_circs(N):\n",
    "    qc = QuantumCircuit(N, N-1)\n",
    "    qc.x(N-1)\n",
    "    qc.h(range(N))\n",
    "    qc.cx(range(N-1), N-1)\n",
    "    qc.h(range(N-1))\n",
    "    qc.barrier()\n",
    "    qc.measure(range(N-1), range(N-1))\n",
    "    return qc\n",
    "\n",
    "N = 5\n",
    "bv_circ = bv_ones_circs(N)\n",
    "bv_circ.draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "b09cb000",
   "metadata": {},
   "source": [
    "We want to see how performing readout-mitigation improves the probability of getting the all-ones bit-string.  Here we will use `resilence_level`, which controls how much mitigation is applied to the result.  The default `resilence_level=1` uses readout mitigation, so lets first turn it off:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "id": "7eb32431",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:05.996770Z",
     "start_time": "2022-11-14T15:58:05.988658Z"
    }
   },
   "outputs": [],
   "source": [
    "no_mit_probs = sampler.run(bv_circ, shots=int(1e4), resilience_level=0).result()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "fe51168d",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-07-08T17:10:23.288136Z",
     "start_time": "2022-07-08T17:10:22.081681Z"
    }
   },
   "source": [
    "The success rate is found to be:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 40,
   "id": "2123c6b4",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:06.058140Z",
     "start_time": "2022-11-14T15:58:05.999566Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.8669"
      ]
     },
     "execution_count": 40,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "no_mit_probs.quasi_dists[0][15]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "14dec7a3",
   "metadata": {},
   "source": [
    "We can now turn the `resilience_level` back to its default value and see what happens:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 41,
   "id": "9d636f97",
   "metadata": {},
   "outputs": [],
   "source": [
    "mit_probs = sampler.run(bv_circ, shots=int(1e4), resilience_level=1).result()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 42,
   "id": "a55545de",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.9091882355714604"
      ]
     },
     "execution_count": 42,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "mit_probs.quasi_dists[0][15]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "340671aa",
   "metadata": {},
   "source": [
    "The difference is not super large here as our circuit is being re-mapped by the transpiler and our problem is small."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "186aecd9",
   "metadata": {},
   "source": [
    "Lets extend the problem size, and record what the most likely bit-string value is, and its corresponding probability:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 47,
   "id": "7f24f634",
   "metadata": {},
   "outputs": [],
   "source": [
    "def most_likely_bitstring(dist):\n",
    "    \"\"\"Return the most likely bit-string from a distribution\n",
    "    \n",
    "    Parameters:\n",
    "        dist (dict_like): Input distribution\n",
    "        \n",
    "    Returns:\n",
    "        str: Most likely bit-string\n",
    "        float: Bit-string probability\n",
    "    \"\"\"\n",
    "    max_bitstring = None\n",
    "    max_prob = 0\n",
    "    for key, value in dist.items():\n",
    "        if value > max_prob:\n",
    "            max_prob = value\n",
    "            max_bitstring = key\n",
    "    return max_bitstring, max_prob"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "eec6f208",
   "metadata": {},
   "source": [
    "We will now make a list of BV circuits of increasing size, and see how performing mitigation works as we scale up the problem:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "49a1ce49",
   "metadata": {},
   "outputs": [],
   "source": [
    "bv_circs = [bv_ones_circs(N) for N in range(2, 13)]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 44,
   "id": "437f9715",
   "metadata": {},
   "outputs": [],
   "source": [
    "no_mit_bv_probs = sampler.run(bv_circs, shots=int(1e4), resilience_level=0).result()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 49,
   "id": "5fd71f41",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('1', 0.9818),\n",
       " ('11', 0.9323),\n",
       " ('111', 0.9348),\n",
       " ('1111', 0.8471),\n",
       " ('11111', 0.7168),\n",
       " ('111111', 0.5829),\n",
       " ('1111111', 0.4017),\n",
       " ('11111010', 0.2696),\n",
       " ('111111110', 0.1725),\n",
       " ('1111101111', 0.1799),\n",
       " ('11111001111', 0.062)]"
      ]
     },
     "execution_count": 49,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[most_likely_bitstring(cnts.binary_probabilities()) for cnts in no_mit_bv_probs.quasi_dists]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "646521b0",
   "metadata": {},
   "source": [
    "Once again we turn the mitigation back on:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 50,
   "id": "b25ea912",
   "metadata": {},
   "outputs": [],
   "source": [
    "mit_bv_probs = sampler.run(bv_circs, shots=int(1e4), resilience_level=1).result()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "1f79c1bb",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[('1', 0.9888733206956232),\n",
       " ('11', 0.971596046696751),\n",
       " ('111', 0.9828151838340594),\n",
       " ('1111', 0.9285202008610656),\n",
       " ('11111', 0.7734574425161226),\n",
       " ('111111', 0.8108054515180869),\n",
       " ('1111111', 0.5884491856463089),\n",
       " ('11111111', 0.6180686511018155),\n",
       " ('111111100', 0.3434415100797467),\n",
       " ('1111111101', 0.0943411225172675),\n",
       " ('11111111100', 0.19607827563420294)]"
      ]
     },
     "execution_count": 51,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "[most_likely_bitstring(cnts.binary_probabilities()) for cnts in mit_bv_probs.quasi_dists]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 52,
   "id": "91c34b15",
   "metadata": {
    "ExecuteTime": {
     "end_time": "2022-11-14T15:58:10.391700Z",
     "start_time": "2022-11-14T15:58:09.800405Z"
    }
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<h3>Version Information</h3><table><tr><th>Qiskit Software</th><th>Version</th></tr><tr><td><code>qiskit-terra</code></td><td>0.24.2</td></tr><tr><td><code>qiskit-aer</code></td><td>0.12.2</td></tr><tr><td><code>qiskit-ibmq-provider</code></td><td>0.20.2</td></tr><tr><td><code>qiskit</code></td><td>0.43.3</td></tr><tr><td><code>qiskit-nature</code></td><td>0.6.2</td></tr><tr><td><code>qiskit-machine-learning</code></td><td>0.6.1</td></tr><tr><th>System information</th></tr><tr><td>Python version</td><td>3.11.4</td></tr><tr><td>Python compiler</td><td>Clang 15.0.7 </td></tr><tr><td>Python build</td><td>main, Jun 10 2023 18:08:41</td></tr><tr><td>OS</td><td>Darwin</td></tr><tr><td>CPUs</td><td>8</td></tr><tr><td>Memory (Gb)</td><td>16.0</td></tr><tr><td colspan='2'>Thu Jul 27 06:34:25 2023 EDT</td></tr></table>"
      ],
      "text/plain": [
       "<IPython.core.display.HTML object>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "import qiskit.tools.jupyter\n",
    "%qiskit_version_table"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "36f5d071",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.11.4"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
