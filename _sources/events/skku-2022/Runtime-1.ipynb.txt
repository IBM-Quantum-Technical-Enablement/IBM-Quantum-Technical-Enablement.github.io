{
 "cells": [
  {
   "cell_type": "markdown",
   "id": "6fd8c0aa",
   "metadata": {},
   "source": [
    "# Qiskit Runtime"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10624c06",
   "metadata": {},
   "source": [
    "## Background\n",
    "\n",
    "For the last ~3-4 years, users of IBM Quantum systems have had full control of the construction, compilation, and execution of quantum circuits on these systems.  With power comes responsibility, and users are expected to know the details of how the hardware works, and how to improve their performance via error suppresion and mitigation techniques.  This makes life difficult for those not well versed in advanced quantum computing techniques."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "10e8b89e",
   "metadata": {},
   "source": [
    "![details](images/runtime1/details.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a025ba8d",
   "metadata": {},
   "source": [
    "As quantum computing matures, and users further detached from device physics gain interest, it is important to abstract as much of this knowledge away from these users, so that focus can be on building applications and algorithms.\n",
    "\n",
    "The **Qiskit Runtime** is an execution architecture designed to abstract many of these details away from users, and give a high-fidelty managed user experience to those who prefer a more automated execution process.  Specifically, IBM Quantum knows many of the knobs that, to first-order, give best results and can be automatically set for users.  For these features, the options and code can be pushed into a cloud execution environment."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "a2582f1f",
   "metadata": {},
   "source": [
    "The Runtime is a collection of \"primitive\" quantum operations that execute in a dockerized cloud environment.  Currently there are two primitives that users can use:\n",
    "\n",
    "| Primitive | What it does | Inputs | Outputs |\n",
    "| --- | --- | --- | --- |\n",
    "| **Sampler** | Samples circuit output distributions, possibly with error mitigation | Quantum circuits | Quasi-probability distributions \\[distributions with (possibly) negative values, but that sums to one\\] |\n",
    "| **Estimator** | Computes expectation values for operators and states defined by circuits, possibly with error mitigation | Quantum circuits and operators | A list of expectation values (and error estimates) |\n",
    "\n",
    "\n",
    "These represent additional access options to the `backend.run()` method used in previous sections.\n",
    "\n",
    "In what follows, we will demonstrate how to use these primitives, and explore the benefits of abstraction, and also performance, that Runtime has to offer."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "058053d2",
   "metadata": {},
   "source": [
    "## Frontmatter"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3e392dcf",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np\n",
    "from qiskit import *\n",
    "from qiskit.quantum_info import hellinger_fidelity\n",
    "from qiskit.visualization import plot_distribution\n",
    "\n",
    "# Operators from Qiskit\n",
    "from qiskit.quantum_info import SparsePauliOp\n",
    "\n",
    "# Import the primitives from Qiskit\n",
    "from qiskit.primitives import Sampler, Estimator\n",
    "\n",
    "# Import simulator primtives from Aer\n",
    "from qiskit_aer.primitives import Sampler as AerSampler\n",
    "from qiskit_aer.primitives import Estimator as AerEstimator\n",
    "\n",
    "# Plotting tools\n",
    "import matplotlib.pyplot as plt\n",
    "try:\n",
    "    plt.style.use('quantum-light')\n",
    "except:\n",
    "    pass\n",
    "%config InlineBackend.figure_format = 'retina'"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ab5e085",
   "metadata": {},
   "source": [
    "## Basics of Runtime"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "672404f4",
   "metadata": {},
   "source": [
    "### Builtin Qiskit primitives\n",
    "\n",
    "Qiskit itself has interfaces for working with the `Sampler` and `Estimator` primitives without accessing hardware. First, lets execute our good friend the BV circuit using the Sampler:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "3144da32",
   "metadata": {},
   "outputs": [],
   "source": [
    "def bv_ones_circs(N):\n",
    "    qc = QuantumCircuit(N, N-1)\n",
    "    qc.x(N-1)\n",
    "    qc.h(range(N))\n",
    "    qc.cx(range(N-1), N-1)\n",
    "    qc.h(range(N-1))\n",
    "    qc.barrier()\n",
    "    qc.measure(range(N-1), range(N-1))\n",
    "    return qc\n",
    "\n",
    "N = 5\n",
    "qc = bv_ones_circs(N)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f965a285",
   "metadata": {},
   "source": [
    "First, we need to instantiate an instance of the `Sampler`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "164b8ddf",
   "metadata": {},
   "outputs": [],
   "source": [
    "sampler = Sampler()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "91519f40",
   "metadata": {},
   "source": [
    "The `sampler` can be used much like `backend.run()` where circuits are passed, and a job instance with results is returned:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "92445d3a",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SamplerResult(quasi_dists=[{0: 1.2918555057623183e-134, 1: 1.959196115802348e-100, 2: 3.1355660193849558e-102, 3: 6.3395367065837045e-68, 4: 1.731144288425601e-102, 5: 5.7871241135006985e-68, 6: 7.859891699955402e-68, 7: 3.628421388053346e-34, 8: 1.6679505911645337e-99, 9: 1.1913527410433244e-67, 10: 1.3375690670228465e-67, 11: 7.924345495110263e-35, 12: 8.437378252404035e-67, 13: 1.8142106940266832e-34, 14: 5.577060207443595e-34, 15: 0.9999999999999986}], metadata=[{}])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res = sampler.run(qc).result()\n",
    "res"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "3a89ba24",
   "metadata": {},
   "source": [
    "The output quasi-distribution is contained in the `result.quasi_dists` attribute."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "c8a2c0dc",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[{0: 1.2918555057623183e-134,\n",
       "  1: 1.959196115802348e-100,\n",
       "  2: 3.1355660193849558e-102,\n",
       "  3: 6.3395367065837045e-68,\n",
       "  4: 1.731144288425601e-102,\n",
       "  5: 5.7871241135006985e-68,\n",
       "  6: 7.859891699955402e-68,\n",
       "  7: 3.628421388053346e-34,\n",
       "  8: 1.6679505911645337e-99,\n",
       "  9: 1.1913527410433244e-67,\n",
       "  10: 1.3375690670228465e-67,\n",
       "  11: 7.924345495110263e-35,\n",
       "  12: 8.437378252404035e-67,\n",
       "  13: 1.8142106940266832e-34,\n",
       "  14: 5.577060207443595e-34,\n",
       "  15: 0.9999999999999986}]"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "res.quasi_dists"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d62f8d7b",
   "metadata": {},
   "source": [
    "Unlike the usual `Counts` returned via `backend.run()` the quasi-distribution states are given as integers rather than bit-strings, and the values are not discrete counts.  This is because, as the number of qubits grows, the size of the bit-string keys grows much larger than the equivilent integer representation.\n",
    "\n",
    "We can use these quasi-distributions to do basically everything the `Counts` was used for.  e.g. we can compute fidelities:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "id": "ca9bee07",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hellinger_fidelity(res.quasi_dists[0], {15: 1})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "39e0aeb8",
   "metadata": {},
   "source": [
    "alternatively one can work in bit-strings:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "id": "bf476bde",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "1.0"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hellinger_fidelity(res.quasi_dists[0].binary_probabilities(), {'1'*(N-1): 1})"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "e0b779c1",
   "metadata": {},
   "source": [
    "We can also plot the results.  It is best to do so with the new `plot_distribution` function since our data is not discrete"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "e6b7d054",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 700x500 with 1 Axes>"
      ]
     },
     "execution_count": 13,
     "metadata": {
      "image/png": {
       "height": 476,
       "width": 695
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "plot_distribution(res.quasi_dists[0].binary_probabilities())"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "43a8e593",
   "metadata": {},
   "source": [
    "We can also look at computing expectation values via the `Estimator`.  Unlike the `Sampler` above where our circuit must have measurements attached to it, circuits sent the `Estimator` **should not** have any measurements!  This is because the `Estimator` will automatically add the necessary post-rotation gates to your circuit to get the measurement basis correct."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "id": "e38abf11",
   "metadata": {},
   "outputs": [],
   "source": [
    "def cntrl_hadamard_ladder(N, measurements=False):\n",
    "    qc = QuantumCircuit(N)\n",
    "\n",
    "    qc.x(range(N))\n",
    "    qc.h(range(N))\n",
    "\n",
    "    for kk in range(N // 2, 0, -1):\n",
    "        qc.ch(kk, kk - 1)\n",
    "    for kk in range(N // 2, N - 1):\n",
    "        qc.ch(kk, kk + 1)\n",
    "    if measurements:\n",
    "        qc.measure_all()\n",
    "    return qc"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "id": "3b77d4a0",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 538.33x535.111 with 1 Axes>"
      ]
     },
     "execution_count": 15,
     "metadata": {
      "image/png": {
       "height": 453,
       "width": 456
      }
     },
     "output_type": "execute_result"
    }
   ],
   "source": [
    "N = 6\n",
    "qc2 = cntrl_hadamard_ladder(N) \n",
    "qc2.draw('mpl')"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "143e2642",
   "metadata": {},
   "source": [
    "Let us compute the operator $\\langle Z^{\\otimes N}\\rangle$ on the state generated by the above circuit.  Again, we need to first create an instance of our primitive."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "da2bca15",
   "metadata": {},
   "outputs": [],
   "source": [
    "estimator = Estimator()"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c4d1d268",
   "metadata": {},
   "source": [
    "and now need to specify our operator in terms of a operator class that Qiskit understands"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "3128f57f",
   "metadata": {},
   "outputs": [],
   "source": [
    "oper = SparsePauliOp.from_list([('Z'*6, 1)])"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "c8107861",
   "metadata": {},
   "source": [
    "We can feed the circuits and operators into `estimator.run()` and get a result back:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "bde95411",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EstimatorResult(values=array([0.4375]), metadata=[{}])"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "est_res = estimator.run(qc2, oper).result()\n",
    "est_res"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "5ad40bca",
   "metadata": {},
   "source": [
    "The only return value(s) when calling the `Estimator` are the expectation values for the operators we have given, and some optional metadata that returns additional data.  Both the `Sampler` and `Estimator` from Qiskit use a statevector simulation to obtain their results, so the results are accurate to machine precision:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "315d44d3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.4374999999999992"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "est_res.values[0]"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "4b9e08f4",
   "metadata": {},
   "source": [
    "### Primitives in Aer\n",
    "\n",
    "Like Qiskit, the Aer simulator has its own version of the `Estimator` and `Sampler` that sample the final statevector in the computational basis rather than return it wholesale.  We can use them in a similar manner:"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "4c8c50dc",
   "metadata": {},
   "outputs": [],
   "source": [
    "aer_sampler = AerSampler()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "id": "cbd342e3",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "SamplerResult(quasi_dists=[{15: 1.0}], metadata=[{'shots': 10000, 'simulator_metadata': {'parallel_state_update': 8, 'parallel_shots': 1, 'sample_measure_time': 0.005897375, 'noise': 'ideal', 'batched_shots_optimization': False, 'remapped_qubits': False, 'device': 'CPU', 'active_input_qubits': [0, 1, 2, 3, 4], 'measure_sampling': True, 'num_clbits': 4, 'input_qubit_map': [[4, 4], [3, 3], [2, 2], [1, 1], [0, 0]], 'num_qubits': 5, 'method': 'statevector', 'fusion': {'applied': False, 'max_fused_qubits': 5, 'threshold': 14, 'enabled': True}}}])"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aer_samp_res = aer_sampler.run(qc, shots=1e4).result()\n",
    "aer_samp_res"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "d395638b",
   "metadata": {},
   "source": [
    "We now see that the `metadata` attribute of the result class is populated with a collection of items related to the simulation parameters used, and the number of samples (\"shots\") taken from the distribution. Similar for the `Estimator`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "id": "fbe7a2be",
   "metadata": {},
   "outputs": [],
   "source": [
    "aer_estimator = AerEstimator()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "id": "77bf5248",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "EstimatorResult(values=array([0.442]), metadata=[{'shots': 10000, 'variance': 0.804636, 'simulator_metadata': [{'parallel_state_update': 8, 'parallel_shots': 1, 'sample_measure_time': 0.004706916, 'noise': 'ideal', 'batched_shots_optimization': False, 'remapped_qubits': False, 'device': 'CPU', 'active_input_qubits': [0, 1, 2, 3, 4, 5], 'measure_sampling': True, 'num_clbits': 6, 'input_qubit_map': [[5, 5], [4, 4], [3, 3], [2, 2], [1, 1], [0, 0]], 'num_qubits': 6, 'method': 'statevector', 'fusion': {'applied': False, 'max_fused_qubits': 5, 'threshold': 14, 'enabled': True}}]}])"
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "aer_est_res = aer_estimator.run(qc2, oper, shots=1e4).result()\n",
    "aer_est_res"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "ed09d8fa",
   "metadata": {},
   "source": [
    "however we now see a \"variance\" field in the metadata that takes into account the fact that our estimate of the expectation value has some uncertainty with it.  This combined with the number of shots is useful in error analysis."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "7b133441",
   "metadata": {},
   "source": [
    "## Sampler vs Estimator\n",
    "\n",
    "We now turn to the question as to why there is both a `Sampler` and an `Estimator`?  Indeed, the quantum computer itself is already sampling the output distribution, and computing the expectation value from that distribution is not computationally expensive.  So why have both?\n",
    "\n",
    "There are two primary reasons as to why one needs an `Estimator` interfeace along side that of the `Sampler`.  Firstly, there are data size considerations that come into play."
   ]
  },
  {
   "cell_type": "markdown",
   "id": "2eff22fe",
   "metadata": {},
   "source": [
    "![workflow](images/runtime1/workflow.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "id": "f6befe4e",
   "metadata": {},
   "source": [
    "As the number of qubits and samples taken grows, there is a large overhead inherent in sending the entire dictionary of counts over a network to the user.  For many near-term applications of interest, the necessary output is expectation values that can be represented by a single floating-point number (an additional number if computing error bounds as well).  Note that, for many sampling problems of interest, only the most probable bit-string is of interest, indicating that IO savings for sampling is also possible. \n",
    "\n",
    "The second reason has to do with error mitigation.  There are some methods that are more suited to computations for expectation values than for distributions.  As such, when thinking about automating workflows for end users that include error mitigation, the partitioning of `Sampler` and `Estimator` makes sense from an implimentation point of view."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "2333121f",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.10.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
